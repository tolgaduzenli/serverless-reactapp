// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NoteList /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NoteList
    noteList={Array []}
    onClickAdd={[MockFunction]}
    onClickDelete={[MockFunction]}
    onClickEdit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <table
          className="responsive-table centered striped"
        >
          <thead>
            <tr>
              <th>
                Title
              </th>
              <th>
                Description
              </th>
              <th>
                Action
              </th>
            </tr>
          </thead>
          <tbody />
        </table>,
        <div
          className="fixed-action-btn"
        >
          <button
            className="btn-floating btn-large waves-effect waves-light green"
            onClick={[MockFunction]}
          >
            <i
              className="material-icons"
            >
              add
            </i>
          </button>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <th>
                  Title
                </th>
                <th>
                  Description
                </th>
                <th>
                  Action
                </th>
              </tr>
            </thead>,
            <tbody />,
          ],
          "className": "responsive-table centered striped",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <th>
                  Title
                </th>
                <th>
                  Description
                </th>
                <th>
                  Action
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Title
                  </th>,
                  <th>
                    Description
                  </th>,
                  <th>
                    Action
                  </th>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Title",
                  },
                  "ref": null,
                  "rendered": "Title",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Action",
                  },
                  "ref": null,
                  "rendered": "Action",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn-floating btn-large waves-effect waves-light green"
            onClick={[MockFunction]}
          >
            <i
              className="material-icons"
            >
              add
            </i>
          </button>,
          "className": "fixed-action-btn",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="material-icons"
            >
              add
            </i>,
            "className": "btn-floating btn-large waves-effect waves-light green",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "add",
              "className": "material-icons",
            },
            "ref": null,
            "rendered": "add",
            "type": "i",
          },
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <table
            className="responsive-table centered striped"
          >
            <thead>
              <tr>
                <th>
                  Title
                </th>
                <th>
                  Description
                </th>
                <th>
                  Action
                </th>
              </tr>
            </thead>
            <tbody />
          </table>,
          <div
            className="fixed-action-btn"
          >
            <button
              className="btn-floating btn-large waves-effect waves-light green"
              onClick={[MockFunction]}
            >
              <i
                className="material-icons"
              >
                add
              </i>
            </button>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr>
                  <th>
                    Title
                  </th>
                  <th>
                    Description
                  </th>
                  <th>
                    Action
                  </th>
                </tr>
              </thead>,
              <tbody />,
            ],
            "className": "responsive-table centered striped",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <th>
                    Title
                  </th>
                  <th>
                    Description
                  </th>
                  <th>
                    Action
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Title
                    </th>,
                    <th>
                      Description
                    </th>,
                    <th>
                      Action
                    </th>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Title",
                    },
                    "ref": null,
                    "rendered": "Title",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Description",
                    },
                    "ref": null,
                    "rendered": "Description",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Action",
                    },
                    "ref": null,
                    "rendered": "Action",
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn-floating btn-large waves-effect waves-light green"
              onClick={[MockFunction]}
            >
              <i
                className="material-icons"
              >
                add
              </i>
            </button>,
            "className": "fixed-action-btn",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="material-icons"
              >
                add
              </i>,
              "className": "btn-floating btn-large waves-effect waves-light green",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "add",
                "className": "material-icons",
              },
              "ref": null,
              "rendered": "add",
              "type": "i",
            },
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
